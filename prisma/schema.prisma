// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Tokens (รวมข้อมูล client และ token)
model Token {
  id          Int      @id @default(autoincrement())
  uuid        String   @unique @default(uuid()) @map("uuid")
  targetDomain String  @unique @map("target_domain")
  tokenHash   String?  @unique @map("token_hash")
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // Relations
  apiLogs  ApiLog[]
  transactionCursor TransactionCursor?

  @@map("tokens")
}

// API Logs
model ApiLog {
  id          Int      @id @default(autoincrement())
  uuid        String   @unique @default(uuid()) @map("uuid")
  targetDomain String  @map("target_domain")
  endpoint    String
  method      String
  requestData Json?    @map("request_data")
  responseData Json?   @map("response_data")
  statusCode  Int?     @map("status_code")
  createdAt   DateTime @default(now()) @map("created_at")

  // Relations
  token Token @relation(fields: [targetDomain], references: [targetDomain])

  @@map("api_logs")
}

// Cursor สำหรับดึงธุรกรรมครั้งถัดไปต่อ API Token
model TransactionCursor {
  id         Int      @id @default(autoincrement())
  tokenUuid  String   @unique @map("token_uuid")
  lastSeenAt DateTime @map("last_seen_at")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  // Relations
  token Token @relation(fields: [tokenUuid], references: [uuid])

  @@map("transaction_cursors")
}
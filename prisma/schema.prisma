generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Token {
  id                Int                 @id @default(autoincrement())
  targetDomain      String              @unique @map("target_domain")
  tokenHash         String?             @unique @map("token_hash")
  isActive          Boolean             @default(true) @map("is_active")
  paymentSys        String?             @map("payment_sys") // รองรับ payment systems: 'easypay', 'bibpay', 'future-payment'
  paymentKey        String?             @map("payment_key") // API key สำหรับ payment gateway
  paymentSecret     String?             @map("payment_secret") // Secret key สำหรับ payment gateway
  createdAt         DateTime            @default(now()) @map("created_at")
  updatedAt         DateTime            @updatedAt @map("updated_at")
  uuid              String              @unique @default(uuid()) @map("uuid")
  apiLogs           ApiLog[]
  transactionCursor TransactionCursor[]
  paymentChannels   PaymentChannel[]
  @@map("tokens")
}

model ApiLog {
  id           Int      @id @default(autoincrement())
  targetDomain String   @map("target_domain")
  endpoint     String
  method       String
  requestData  Json?    @map("request_data")
  responseData Json?    @map("response_data")
  statusCode   Int?     @map("status_code")
  createdAt    DateTime @default(now()) @map("created_at")
  uuid         String   @unique @default(uuid()) @map("uuid")
  token        Token    @relation(fields: [targetDomain], references: [targetDomain])

  @@map("api_logs")
}

model TransactionCursor {
  id                       Int      @id @default(autoincrement())
  tokenUuid                String   @map("token_uuid")
  lastSeenAt               DateTime @map("last_seen_at")
  createdAt                DateTime @default(now()) @map("created_at")
  updatedAt                DateTime @updatedAt @map("updated_at")
  from_bank_account_number String
  token                    Token    @relation(fields: [tokenUuid], references: [uuid], map: "fk_transaction_cursor_token")

  @@unique([tokenUuid, from_bank_account_number], map: "unique_token_account")
  @@map("transaction_cursors")
}

model payment_deposits {
  id                     String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  ref_code               String    @unique @db.VarChar(100)
  amount                 Decimal   @db.Decimal(15, 2)
  deposit_amount         Decimal   @db.Decimal(15, 2)
  account_name           String    @db.VarChar(100)
  bank_number            String    @db.VarChar(50)
  bank_code              String    @db.VarChar(10)
  callback_url           String
  signature              String?   @db.VarChar(255)
  api_key                String?   @db.VarChar(255)
  gateway_type           String    @db.VarChar(20)
  status                 String?   @default("pending") @db.VarChar(20)
  qr_code                String?
  gateway_transaction_id String?   @db.VarChar(100)
  gateway_response       Json?
  created_at             DateTime? @default(now()) @db.Timestamp(6)
  updated_at             DateTime? @default(now()) @db.Timestamp(6)
  timeout_at             DateTime? @db.Timestamp(6)
  completed_at           DateTime? @db.Timestamp(6)
}

model payment_webhooks {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  ref_code         String    @db.VarChar(100)
  transaction_type String    @db.VarChar(20)
  gateway_type     String    @db.VarChar(20)
  webhook_data     Json
  status           String?   @default("received") @db.VarChar(20)
  processed_at     DateTime? @db.Timestamp(6)
  created_at       DateTime? @default(now()) @db.Timestamp(6)
}

model payment_withdraw {
  id                     String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  ref_code               String    @unique @db.VarChar(100)
  amount                 Decimal   @db.Decimal(15, 2)
  account_name           String    @db.VarChar(100)
  bank_number            String    @db.VarChar(50)
  bank_code              String    @db.VarChar(10)
  callback_url           String
  signature              String?   @db.VarChar(255)
  api_key                String?   @db.VarChar(255)
  gateway_type           String    @db.VarChar(20)
  status                 String?   @default("pending") @db.VarChar(20)
  gateway_transaction_id String?   @db.VarChar(100)
  gateway_response       Json?
  created_at             DateTime? @default(now()) @db.Timestamp(6)
  updated_at             DateTime? @default(now()) @db.Timestamp(6)
  completed_at           DateTime? @db.Timestamp(6)
}

model PaymentChannel {
  id            Int      @id @default(autoincrement())
  type          String   @db.VarChar(20) // "payment_gateway", "bank_sms", "bank_slip"
  bankCode      String?  @db.VarChar(10) // null สำหรับ payment_gateway
  bankNo        String?  @db.VarChar(50) // null สำหรับ payment_gateway  
  bankName      String?  @db.VarChar(100) // null สำหรับ payment_gateway
  paymentSys    String?  @db.VarChar(20) // สำหรับ payment_gateway เท่านั้น ("bib-pay", "onepay")
  enable        Boolean  @default(true)
  autoDeposit   Boolean  @default(false) @map("auto_deposit")
  autoWithdraw  Boolean  @default(false) @map("auto_withdraw")
  tokenUuid     String   @map("token_uuid") // เชื่อมกับ Token
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  
  token Token @relation(fields: [tokenUuid], references: [uuid])
  
  @@map("payment_channels")
}